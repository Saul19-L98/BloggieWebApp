@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signManger
@inject UserManager<IdentityUser> userManger
@{
	ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">
			@if (Model != null)
			{
				<h1 class="mb-3">@Model.Heading</h1>
				<div class="d-flex justify-content-between mb-3">
					<span class="text-secondary">@Model.Author</span>
					<span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
				</div>
				<div class="d-flex mb-3 bg-green">
					@if (signManger.IsSignedIn(User))
					{
						@if (Model.Liked)
						{
							<a style="cursor:pointer;">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnLike" style="cursor:pointer;">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}
					}
					<p>
						<span id="totalLikes">@Model.TotalLikes</span> Likes
					</p>
				</div>
				<div class="mb-3 d-flex">
					<p class="mb-4">
						@foreach (var tag in Model.Tags)
						{
							<span class="badge bg-secondary me-1">@tag.Name</span>
						}
					</p>
				</div>
				<img src="@Model.FeaturedImageUrl" alt="@Model.Heading" class="d-block img-fluid mb-3"/>
				<div class="mb-3 blog-details-content">
					@Html.Raw(Model.Content)
				</div>

				<div class="card">
					<div class="card-header">
						<h5>Comments</h5>
						@if (signManger.IsSignedIn(User))
						{
							<form method="post">
								<div class="mb-3">
									<label class="form-label">Comment Description</label>
									<input type="text" class="form-control" asp-for="CommentDescription"/>
								</div>
								<div class="mb-3">
									<button type="submit" class="btn btn-dark">Submit</button>
									<input type="hidden" asp-for="Id" />
									<input type="hidden" asp-for="UrlHandle" />
								</div>
							</form>
						}
					</div>
					<div class="card-body">
						@if (Model.Comments != null && Model.Comments.Any())
						{
							@foreach (var comment in Model.Comments)
							{
								<div class="card mb-3">
									<div class="card-body">
										@comment.Description
									</div>
									<div class="d-flex justify-content-between mx-2 mb-2">
										<span class="text-secondary">@comment.Username</span>
										<span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
									</div>
								</div>
							}
						}
					</div>
				</div>
			}
			else
			{
				<p>Blog Post not found!</p>
			}
		</div>
	</div>
</div>

@section Scripts {
	<script>
		const btnLikeElement = document.querySelector("#btnLike");

		const totalLikeElement = document.querySelector("#totalLikes");

		async function getTotalLikes() {
			fetch('/api/blogPostLike/@Model!.Id/totalLikes', {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				}
			})
			.then(data => data.json())
			.then(result => totalLikeElement.innerHTML = result);
		}

		async function addLikeForBlog() {
			fetch('api/BlogPostLike/Add', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				},
				body: JSON.stringify({
					blogPostId: '@Model!.Id',
					userId: '@userManger.GetUserId(User)'
				})
			})
				.then(() => {
					btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
					btnLikeElement.removeEventListener('click', addLikeForBlog);
					getTotalLikes();
				})
		}
				

		btnLikeElement.addEventListener("click",addLikeForBlog);
	</script>
}